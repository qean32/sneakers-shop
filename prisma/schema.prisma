generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())

    fullname         String
    email            String            @unique
    password         String
    Cart             Cart?
    VerificationCode VerificationCode?
    Order            Order[]
    Role             Role              @default(USER)

    provider   String?
    providerId String?

    createdAt  DateTime @default(now())
    updateadAt DateTime @updatedAt
}

model Brand {
    id Int @id @default(autoincrement())

    name     String     @unique
    sneakers Sneakers[]
}

model SneakersItem {
    id Int @id @default(autoincrement())

    color String?
    size  Int?
    price Int

    Sneakers   Sneakers @relation(fields: [SneakersId], references: [id])
    SneakersId Int

    CartItem CartItem[]
}

model Sneakers {
    id Int @id @default(autoincrement())

    name  String
    image String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Brand   Brand? @relation(fields: [BrandId], references: [id])
    BrandId Int?

    SneakersItem SneakersItem[]
    materials    Material[]
}

model Material {
    id    Int    @id @default(autoincrement())
    name  String @unique
    price Int
    image String

    CartItem   CartItem[]
    Sneakers   Sneakers?  @relation(fields: [sneakersId], references: [id])
    sneakersId Int?
}

model Cart {
    id    Int    @id @default(autoincrement())
    token String

    TotalAmount Int @default(0)

    User   User? @relation(fields: [UserId], references: [id])
    UserId Int?  @unique

    CartItems CartItem[]
}

model CartItem {
    id Int @id @default(autoincrement())

    Cart   Cart @relation(fields: [CartId], references: [id])
    CartId Int

    count Int

    SneakersItem   SneakersItem @relation(fields: [SneakersItemId], references: [id])
    SneakersItemId Int

    materials Material[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    User   User? @relation(fields: [UserId], references: [id])
    UserId Int

    token String

    TotalAmount Int
    status      OrderStatus
    paymentId   String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    items Json

    fullname String
    email    String
    phone    String
    address  String
    comment  String?
}

model VerificationCode {
    id Int @id @default(autoincrement())

    User   User @relation(fields: [UserId], references: [id])
    UserId Int  @unique

    code String

    createdAt DateTime @default(now())
}

enum OrderStatus {
    PENDING
    SUCCESEED
    CENCELLED
}

enum Role {
    USER
    ADMIN
}
